// Copyright 2020 Navibyte (https://navibyte.com). All rights reserved.
// Use of this source code is governed by a MIT-style license, see the LICENSE.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: quake_api.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Magnitude is an enum for minimum earthquake magnitudes.
type Magnitude int32

const (
	Magnitude_MAGNITUDE_UNSPECIFIED Magnitude = 0
	Magnitude_MAGNITUDE_SIGNIFICANT Magnitude = 1
	Magnitude_MAGNITUDE_M45_PLUS    Magnitude = 2
	Magnitude_MAGNITUDE_M25_PLUS    Magnitude = 3
	Magnitude_MAGNITUDE_M10_PLUS    Magnitude = 4
	Magnitude_MAGNITUDE_ALL         Magnitude = 5
)

// Enum value maps for Magnitude.
var (
	Magnitude_name = map[int32]string{
		0: "MAGNITUDE_UNSPECIFIED",
		1: "MAGNITUDE_SIGNIFICANT",
		2: "MAGNITUDE_M45_PLUS",
		3: "MAGNITUDE_M25_PLUS",
		4: "MAGNITUDE_M10_PLUS",
		5: "MAGNITUDE_ALL",
	}
	Magnitude_value = map[string]int32{
		"MAGNITUDE_UNSPECIFIED": 0,
		"MAGNITUDE_SIGNIFICANT": 1,
		"MAGNITUDE_M45_PLUS":    2,
		"MAGNITUDE_M25_PLUS":    3,
		"MAGNITUDE_M10_PLUS":    4,
		"MAGNITUDE_ALL":         5,
	}
)

func (x Magnitude) Enum() *Magnitude {
	p := new(Magnitude)
	*p = x
	return p
}

func (x Magnitude) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Magnitude) Descriptor() protoreflect.EnumDescriptor {
	return file_quake_api_proto_enumTypes[0].Descriptor()
}

func (Magnitude) Type() protoreflect.EnumType {
	return &file_quake_api_proto_enumTypes[0]
}

func (x Magnitude) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Magnitude.Descriptor instead.
func (Magnitude) EnumDescriptor() ([]byte, []int) {
	return file_quake_api_proto_rawDescGZIP(), []int{0}
}

// Past is an enum for periods for filtering.
type Past int32

const (
	Past_PAST_UNSPECIFIED Past = 0
	Past_PAST_HOUR        Past = 1
	Past_PAST_DAY         Past = 2
	Past_PAST_7DAYS       Past = 3
	Past_PAST_30DAYS      Past = 4
)

// Enum value maps for Past.
var (
	Past_name = map[int32]string{
		0: "PAST_UNSPECIFIED",
		1: "PAST_HOUR",
		2: "PAST_DAY",
		3: "PAST_7DAYS",
		4: "PAST_30DAYS",
	}
	Past_value = map[string]int32{
		"PAST_UNSPECIFIED": 0,
		"PAST_HOUR":        1,
		"PAST_DAY":         2,
		"PAST_7DAYS":       3,
		"PAST_30DAYS":      4,
	}
)

func (x Past) Enum() *Past {
	p := new(Past)
	*p = x
	return p
}

func (x Past) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Past) Descriptor() protoreflect.EnumDescriptor {
	return file_quake_api_proto_enumTypes[1].Descriptor()
}

func (Past) Type() protoreflect.EnumType {
	return &file_quake_api_proto_enumTypes[1]
}

func (x Past) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Past.Descriptor instead.
func (Past) EnumDescriptor() ([]byte, []int) {
	return file_quake_api_proto_rawDescGZIP(), []int{1}
}

// ListEarthquakesRequest defines parameters for the ListEarthquakes method.
type ListEarthquakesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Magnitude sets the minimum magnitude for filtering earthquakes.
	Magnitude Magnitude `protobuf:"varint,1,opt,name=magnitude,proto3,enum=quake.api.v1.Magnitude" json:"magnitude,omitempty"`
	// Past is a period (like past day) filter.
	Past Past `protobuf:"varint,2,opt,name=past,proto3,enum=quake.api.v1.Past" json:"past,omitempty"`
	// Limit is a maximum number of earthquakes to return. If 0 no limit apply.
	Limit uint64 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	// Details, if true, tells to return earthquakes with detailed data.
	Details bool `protobuf:"varint,4,opt,name=details,proto3" json:"details,omitempty"`
	// Focus is spatial filter - either around a position or inside bounds.
	// Note that only one ot these properties can be set for a request.
	//
	// Types that are assignable to Focus:
	//	*ListEarthquakesRequest_Position
	//	*ListEarthquakesRequest_Bounds
	Focus isListEarthquakesRequest_Focus `protobuf_oneof:"focus"`
}

func (x *ListEarthquakesRequest) Reset() {
	*x = ListEarthquakesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quake_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEarthquakesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEarthquakesRequest) ProtoMessage() {}

func (x *ListEarthquakesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quake_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEarthquakesRequest.ProtoReflect.Descriptor instead.
func (*ListEarthquakesRequest) Descriptor() ([]byte, []int) {
	return file_quake_api_proto_rawDescGZIP(), []int{0}
}

func (x *ListEarthquakesRequest) GetMagnitude() Magnitude {
	if x != nil {
		return x.Magnitude
	}
	return Magnitude_MAGNITUDE_UNSPECIFIED
}

func (x *ListEarthquakesRequest) GetPast() Past {
	if x != nil {
		return x.Past
	}
	return Past_PAST_UNSPECIFIED
}

func (x *ListEarthquakesRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListEarthquakesRequest) GetDetails() bool {
	if x != nil {
		return x.Details
	}
	return false
}

func (m *ListEarthquakesRequest) GetFocus() isListEarthquakesRequest_Focus {
	if m != nil {
		return m.Focus
	}
	return nil
}

func (x *ListEarthquakesRequest) GetPosition() *GeoPointE7 {
	if x, ok := x.GetFocus().(*ListEarthquakesRequest_Position); ok {
		return x.Position
	}
	return nil
}

func (x *ListEarthquakesRequest) GetBounds() *GeoBoundsE7 {
	if x, ok := x.GetFocus().(*ListEarthquakesRequest_Bounds); ok {
		return x.Bounds
	}
	return nil
}

type isListEarthquakesRequest_Focus interface {
	isListEarthquakesRequest_Focus()
}

type ListEarthquakesRequest_Position struct {
	Position *GeoPointE7 `protobuf:"bytes,5,opt,name=position,proto3,oneof"`
}

type ListEarthquakesRequest_Bounds struct {
	Bounds *GeoBoundsE7 `protobuf:"bytes,6,opt,name=bounds,proto3,oneof"`
}

func (*ListEarthquakesRequest_Position) isListEarthquakesRequest_Focus() {}

func (*ListEarthquakesRequest_Bounds) isListEarthquakesRequest_Focus() {}

// ListEarthquakesResponse defines the response for the ListEarthquakes method.
type ListEarthquakesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// EarthquakeCollection with earthquakes.
	Collection *EarthquakeCollection `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
}

func (x *ListEarthquakesResponse) Reset() {
	*x = ListEarthquakesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quake_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEarthquakesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEarthquakesResponse) ProtoMessage() {}

func (x *ListEarthquakesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quake_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEarthquakesResponse.ProtoReflect.Descriptor instead.
func (*ListEarthquakesResponse) Descriptor() ([]byte, []int) {
	return file_quake_api_proto_rawDescGZIP(), []int{1}
}

func (x *ListEarthquakesResponse) GetCollection() *EarthquakeCollection {
	if x != nil {
		return x.Collection
	}
	return nil
}

// GetEarthquakeRequest defines parameters for the GetEarthquake method.
type GetEarthquakeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of an earthquake to be searched.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Details, if true, tells to return an earthquake with detailed data.
	Details bool `protobuf:"varint,2,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *GetEarthquakeRequest) Reset() {
	*x = GetEarthquakeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quake_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEarthquakeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEarthquakeRequest) ProtoMessage() {}

func (x *GetEarthquakeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quake_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEarthquakeRequest.ProtoReflect.Descriptor instead.
func (*GetEarthquakeRequest) Descriptor() ([]byte, []int) {
	return file_quake_api_proto_rawDescGZIP(), []int{2}
}

func (x *GetEarthquakeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetEarthquakeRequest) GetDetails() bool {
	if x != nil {
		return x.Details
	}
	return false
}

// GetEarthquakeRequest defines the response for the GetEarthquake method.
type GetEarthquakeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Feature as an Earthquake.
	Feature *Earthquake `protobuf:"bytes,1,opt,name=feature,proto3" json:"feature,omitempty"`
}

func (x *GetEarthquakeResponse) Reset() {
	*x = GetEarthquakeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quake_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEarthquakeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEarthquakeResponse) ProtoMessage() {}

func (x *GetEarthquakeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quake_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEarthquakeResponse.ProtoReflect.Descriptor instead.
func (*GetEarthquakeResponse) Descriptor() ([]byte, []int) {
	return file_quake_api_proto_rawDescGZIP(), []int{3}
}

func (x *GetEarthquakeResponse) GetFeature() *Earthquake {
	if x != nil {
		return x.Feature
	}
	return nil
}

var File_quake_api_proto protoreflect.FileDescriptor

var file_quake_api_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x71, 0x75, 0x61, 0x6b, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0c, 0x71, 0x75, 0x61, 0x6b, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x1a,
	0x0b, 0x71, 0x75, 0x61, 0x6b, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9d, 0x02, 0x0a,
	0x16, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x61, 0x72, 0x74, 0x68, 0x71, 0x75, 0x61, 0x6b, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x09, 0x6d, 0x61, 0x67, 0x6e, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x71, 0x75, 0x61,
	0x6b, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x67, 0x6e, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x52, 0x09, 0x6d, 0x61, 0x67, 0x6e, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x26,
	0x0a, 0x04, 0x70, 0x61, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x71,
	0x75, 0x61, 0x6b, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x73, 0x74,
	0x52, 0x04, 0x70, 0x61, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x36, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x71, 0x75, 0x61, 0x6b, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6f, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x45, 0x37, 0x48, 0x00, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33,
	0x0a, 0x06, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x71, 0x75, 0x61, 0x6b, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x6f, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x45, 0x37, 0x48, 0x00, 0x52, 0x06, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x66, 0x6f, 0x63, 0x75, 0x73, 0x22, 0x5d, 0x0a, 0x17,
	0x4c, 0x69, 0x73, 0x74, 0x45, 0x61, 0x72, 0x74, 0x68, 0x71, 0x75, 0x61, 0x6b, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x71, 0x75,
	0x61, 0x6b, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x61, 0x72, 0x74, 0x68,
	0x71, 0x75, 0x61, 0x6b, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x40, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x45, 0x61, 0x72, 0x74, 0x68, 0x71, 0x75, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x4b, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x45, 0x61, 0x72, 0x74, 0x68, 0x71, 0x75, 0x61, 0x6b, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x07, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x71, 0x75, 0x61, 0x6b, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x61, 0x72, 0x74, 0x68, 0x71, 0x75, 0x61, 0x6b,
	0x65, 0x52, 0x07, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2a, 0x9c, 0x01, 0x0a, 0x09, 0x4d,
	0x61, 0x67, 0x6e, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x4d, 0x41, 0x47, 0x4e,
	0x49, 0x54, 0x55, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x4d, 0x41, 0x47, 0x4e, 0x49, 0x54, 0x55, 0x44, 0x45,
	0x5f, 0x53, 0x49, 0x47, 0x4e, 0x49, 0x46, 0x49, 0x43, 0x41, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x16,
	0x0a, 0x12, 0x4d, 0x41, 0x47, 0x4e, 0x49, 0x54, 0x55, 0x44, 0x45, 0x5f, 0x4d, 0x34, 0x35, 0x5f,
	0x50, 0x4c, 0x55, 0x53, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x4d, 0x41, 0x47, 0x4e, 0x49, 0x54,
	0x55, 0x44, 0x45, 0x5f, 0x4d, 0x32, 0x35, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x10, 0x03, 0x12, 0x16,
	0x0a, 0x12, 0x4d, 0x41, 0x47, 0x4e, 0x49, 0x54, 0x55, 0x44, 0x45, 0x5f, 0x4d, 0x31, 0x30, 0x5f,
	0x50, 0x4c, 0x55, 0x53, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x4d, 0x41, 0x47, 0x4e, 0x49, 0x54,
	0x55, 0x44, 0x45, 0x5f, 0x41, 0x4c, 0x4c, 0x10, 0x05, 0x2a, 0x5a, 0x0a, 0x04, 0x50, 0x61, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x41, 0x53, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x41, 0x53, 0x54, 0x5f,
	0x48, 0x4f, 0x55, 0x52, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x41, 0x53, 0x54, 0x5f, 0x44,
	0x41, 0x59, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x41, 0x53, 0x54, 0x5f, 0x37, 0x44, 0x41,
	0x59, 0x53, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x41, 0x53, 0x54, 0x5f, 0x33, 0x30, 0x44,
	0x41, 0x59, 0x53, 0x10, 0x04, 0x32, 0xc8, 0x01, 0x0a, 0x0c, 0x51, 0x75, 0x61, 0x6b, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5e, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x61,
	0x72, 0x74, 0x68, 0x71, 0x75, 0x61, 0x6b, 0x65, 0x73, 0x12, 0x24, 0x2e, 0x71, 0x75, 0x61, 0x6b,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x61, 0x72,
	0x74, 0x68, 0x71, 0x75, 0x61, 0x6b, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x25, 0x2e, 0x71, 0x75, 0x61, 0x6b, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x45, 0x61, 0x72, 0x74, 0x68, 0x71, 0x75, 0x61, 0x6b, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x45, 0x61, 0x72,
	0x74, 0x68, 0x71, 0x75, 0x61, 0x6b, 0x65, 0x12, 0x22, 0x2e, 0x71, 0x75, 0x61, 0x6b, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x61, 0x72, 0x74, 0x68, 0x71,
	0x75, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x71, 0x75,
	0x61, 0x6b, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x61,
	0x72, 0x74, 0x68, 0x71, 0x75, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x03, 0x5a, 0x01, 0x2e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_quake_api_proto_rawDescOnce sync.Once
	file_quake_api_proto_rawDescData = file_quake_api_proto_rawDesc
)

func file_quake_api_proto_rawDescGZIP() []byte {
	file_quake_api_proto_rawDescOnce.Do(func() {
		file_quake_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_quake_api_proto_rawDescData)
	})
	return file_quake_api_proto_rawDescData
}

var file_quake_api_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_quake_api_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_quake_api_proto_goTypes = []interface{}{
	(Magnitude)(0),                  // 0: quake.api.v1.Magnitude
	(Past)(0),                       // 1: quake.api.v1.Past
	(*ListEarthquakesRequest)(nil),  // 2: quake.api.v1.ListEarthquakesRequest
	(*ListEarthquakesResponse)(nil), // 3: quake.api.v1.ListEarthquakesResponse
	(*GetEarthquakeRequest)(nil),    // 4: quake.api.v1.GetEarthquakeRequest
	(*GetEarthquakeResponse)(nil),   // 5: quake.api.v1.GetEarthquakeResponse
	(*GeoPointE7)(nil),              // 6: quake.api.v1.GeoPointE7
	(*GeoBoundsE7)(nil),             // 7: quake.api.v1.GeoBoundsE7
	(*EarthquakeCollection)(nil),    // 8: quake.api.v1.EarthquakeCollection
	(*Earthquake)(nil),              // 9: quake.api.v1.Earthquake
}
var file_quake_api_proto_depIdxs = []int32{
	0, // 0: quake.api.v1.ListEarthquakesRequest.magnitude:type_name -> quake.api.v1.Magnitude
	1, // 1: quake.api.v1.ListEarthquakesRequest.past:type_name -> quake.api.v1.Past
	6, // 2: quake.api.v1.ListEarthquakesRequest.position:type_name -> quake.api.v1.GeoPointE7
	7, // 3: quake.api.v1.ListEarthquakesRequest.bounds:type_name -> quake.api.v1.GeoBoundsE7
	8, // 4: quake.api.v1.ListEarthquakesResponse.collection:type_name -> quake.api.v1.EarthquakeCollection
	9, // 5: quake.api.v1.GetEarthquakeResponse.feature:type_name -> quake.api.v1.Earthquake
	2, // 6: quake.api.v1.QuakeService.ListEarthquakes:input_type -> quake.api.v1.ListEarthquakesRequest
	4, // 7: quake.api.v1.QuakeService.GetEarthquake:input_type -> quake.api.v1.GetEarthquakeRequest
	3, // 8: quake.api.v1.QuakeService.ListEarthquakes:output_type -> quake.api.v1.ListEarthquakesResponse
	5, // 9: quake.api.v1.QuakeService.GetEarthquake:output_type -> quake.api.v1.GetEarthquakeResponse
	8, // [8:10] is the sub-list for method output_type
	6, // [6:8] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_quake_api_proto_init() }
func file_quake_api_proto_init() {
	if File_quake_api_proto != nil {
		return
	}
	file_quake_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_quake_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEarthquakesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quake_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEarthquakesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quake_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEarthquakeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quake_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEarthquakeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_quake_api_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ListEarthquakesRequest_Position)(nil),
		(*ListEarthquakesRequest_Bounds)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_quake_api_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_quake_api_proto_goTypes,
		DependencyIndexes: file_quake_api_proto_depIdxs,
		EnumInfos:         file_quake_api_proto_enumTypes,
		MessageInfos:      file_quake_api_proto_msgTypes,
	}.Build()
	File_quake_api_proto = out.File
	file_quake_api_proto_rawDesc = nil
	file_quake_api_proto_goTypes = nil
	file_quake_api_proto_depIdxs = nil
}
